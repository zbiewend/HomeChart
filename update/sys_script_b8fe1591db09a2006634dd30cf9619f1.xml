<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_16717_homechart_encounter</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_16717_homechart_encounter">date_timeVALCHANGES^EQ<item endquery="false" field="date_time" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Reminder</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	// find reminder definitions 
	var def = new GlideRecord( 'x_16717_homechart_reminder_definition' );
	def.addQuery( 'encounter_type', current.sys_class_name );
	def.query();
	
	while ( def.next() ) {
		// check if current matches the condition for this definition 
		if ( GlideFilter.checkRecord( current, def.filter, true ) ) {
			// delete existing triggers
			var trig = new GlideRecord( 'sys_trigger' );
			trig.addQuery( 'document', current.sys_class_name );
			trig.addQuery( 'name', 'Encounter reminder' );
			trig.addQuery( 'trigger_type', 0 );
			trig.query();
			while ( trig.next() ) {
				var enc = new GlideRecord( trig.document );
				enc.get( trig.document_key );
				if ( GlideFilter.checkRecord( enc, def.filter, true ) ) {
					trig.deleteRecord();
				}
			}
			
			// create new trigger with this definition
			var dur = new GlideDateTime( def.duration );
			var timeToAdd = dur.getNumericValue();
			var gdt = new GlideDateTime( current.date_time.toString() );
			timeToAdd += gdt.getNumericValue();
			
			var d = new Date( timeToAdd );
			var date = new GlideDateTime( d.getUTCFullYear() + '-' + ( d.getUTCMonth() + 1 ) + 
										 '-' + d.getUTCDate() + ' ' + d.getUTCHours() + ':' + 
										 d.getUTCMinutes() + ':' + d.getUTCSeconds() );
			
			var t = new GlideRecord( 'sys_trigger' );
			t.initialize();
			t.name = 'Encounter reminder';
			t.next_action = date;
			t.document = current.sys_class_name;
			t.document_key = current.sys_id;
			t.trigger_type = 0;
			t.script = "var gr = new GlideRecord( '" + current.sys_class_name + "' );gr.get( '" + current.sys_id + "' );gs.eventQueue( 'x_16717_homechart.encounter_reminder', gr, null, null );";
			t.insert();
			
		}
	}
	

})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>zachary.biewend</sys_created_by>
        <sys_created_on>2016-08-04 07:36:15</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>b8fe1591db09a2006634dd30cf9619f1</sys_id>
        <sys_mod_count>28</sys_mod_count>
        <sys_name>Reminder</sys_name>
        <sys_overrides/>
        <sys_package display_value="HomeChart" source="x_16717_homechart">2cc902f5db731a006634dd30cf9619cf</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="HomeChart">2cc902f5db731a006634dd30cf9619cf</sys_scope>
        <sys_update_name>sys_script_b8fe1591db09a2006634dd30cf9619f1</sys_update_name>
        <sys_updated_by>zachary.biewend</sys_updated_by>
        <sys_updated_on>2016-08-09 00:31:48</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=b8fe1591db09a2006634dd30cf9619f1"/>
</record_update>
