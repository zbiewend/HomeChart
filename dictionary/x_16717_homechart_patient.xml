<?xml version="1.0" encoding="UTF-8"?>
<database>
    <element label="Patient" max_length="40" name="x_16717_homechart_patient" type="collection">
        <element calculation="(function calculatedFieldValue(current) {&#13;&#10;&#9;&#13;&#10;&#9;if ( ! current.date_of_birth )&#13;&#10;&#9;&#9;return '';&#13;&#10;&#9;&#13;&#10;&#9;var output = '';&#13;&#10;&#9;var now = new Date();&#13;&#10;&#9;var nowYear = now.getFullYear();&#13;&#10;&#9;var nowMonth = now.getMonth() + 1; // 0-11&#13;&#10;&#9;var nowDate = now.getDate();&#13;&#10;&#9;&#13;&#10;&#9;var dob = current.date_of_birth.toString();&#13;&#10;&#9;var dobYear = dob.split( '-' ) [0];&#13;&#10;&#9;var dobMonth = dob.split( '-' ) [1];&#13;&#10;&#9;var dobDate = dob.split( '-' ) [2];&#13;&#10;&#9;&#13;&#10;&#9;var diffYear = nowYear - dobYear;&#13;&#10;&#9;var diffMonth = nowMonth - dobMonth;&#13;&#10;&#9;var diffDate = nowDate - dobDate;&#13;&#10;&#9;&#13;&#10;&#9;// 'carry the one'&#13;&#10;&#9;if ( diffDate &lt; 0 ) {&#13;&#10;&#9;&#9;// get days in month&#13;&#10;&#9;&#9;var dim = 0;&#13;&#10;&#9;&#9;if ( nowMonth - 1 == 2 ) { // Feb&#13;&#10;&#9;&#9;&#9;if ( nowYear % 4 == 0 )&#13;&#10;&#9;&#9;&#9;&#9;dim = 29;&#13;&#10;&#9;&#9;&#9;else&#13;&#10;&#9;&#9;&#9;&#9;dim = 28;&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;switch ( nowMonth - 1 ) {&#13;&#10;&#9;&#9;&#9;case 1: &#13;&#10;&#9;&#9;&#9;case 3:&#13;&#10;&#9;&#9;&#9;case 5:&#13;&#10;&#9;&#9;&#9;case 7:&#13;&#10;&#9;&#9;&#9;case 8:&#13;&#10;&#9;&#9;&#9;case 10:&#13;&#10;&#9;&#9;&#9;case 12:&#13;&#10;&#9;&#9;&#9;&#9;dim = 31;&#13;&#10;&#9;&#9;&#9;&#9;break;&#13;&#10;&#9;&#9;&#9;case 4:&#13;&#10;&#9;&#9;&#9;case 6:&#13;&#10;&#9;&#9;&#9;case 9:&#13;&#10;&#9;&#9;&#9;case 11:&#13;&#10;&#9;&#9;&#9;&#9;dim = 30;&#13;&#10;&#9;&#9;&#9;&#9;break;&#13;&#10;&#9;&#9;}&#13;&#10;&#9;&#9;diffDate += dim;&#13;&#10;&#9;&#9;diffMonth -= 1;&#13;&#10;&#9;}&#13;&#10;&#9;&#13;&#10;&#9;if ( diffMonth &lt; 0 ) {&#13;&#10;&#9;&#9;diffMonth += 12;&#13;&#10;&#9;&#9;diffYear -= 1;&#13;&#10;&#9;}&#13;&#10;&#9;&#13;&#10;&#9;if ( diffYear &gt; 0 ) {&#13;&#10;&#9;&#9;output += diffYear + ' year';&#13;&#10;&#9;&#9;output += ( diffYear &gt; 1 ? 's' : '' );&#13;&#10;&#9;}&#13;&#10;&#9;&#13;&#10;&#9;// build output string&#13;&#10;&#9;if ( diffMonth &gt; 0 ) {&#13;&#10;&#9;&#9;output += ( output == '' ? '' : ', ' );&#13;&#10;&#9;&#9;output +=  diffMonth + ' month';&#13;&#10;&#9;&#9;output += ( diffMonth &gt; 1 ? 's' : '' );&#13;&#10;&#9;}&#13;&#10;&#9;&#13;&#10;&#9;if ( diffDate &gt; 0 ) {&#13;&#10;&#9;&#9;output += ( output == '' ? '' : ', ' );&#13;&#10;&#9;&#9;output += diffDate + ' day';&#13;&#10;&#9;&#9;output += ( diffDate &gt; 1 ? 's' : '' );&#13;&#10;&#9;}&#13;&#10;&#9;&#13;&#10;&#9;&#13;&#10;&#9;return output;&#13;&#10;&#9;&#13;&#10;&#13;&#10;})(current);" label="Age" max_length="100" name="age" read_only="true" type="string" virtual="true"/>
        <element choice="1" label="Blood type" max_length="40" name="blood_type" type="choice">
            <choice>
                <element label="O -" sequence="0" value="O -"/>
                <element label="O +" sequence="1" value="O +"/>
                <element label="A -" sequence="2" value="A -"/>
                <element label="A +" sequence="3" value="A +"/>
                <element label="B -" sequence="4" value="B -"/>
                <element label="B +" sequence="5" value="B +"/>
                <element label="AB -" sequence="6" value="AB -"/>
                <element label="AB +" sequence="7" value="AB +"/>
            </choice>
        </element>
        <element label="Date of birth" max_length="40" name="date_of_birth" type="glide_date"/>
        <element calculation="(function calculatedFieldValue(current) {&#13;&#10;&#13;&#10;&#9;var output = 0;&#13;&#10;&#9;&#13;&#10;&#9;var gr = new GlideRecord( 'x_16717_homechart_height' );&#13;&#10;&#9;gr.addQuery( 'patient', current.sys_id );&#13;&#10;&#9;gr.orderByDesc( 'date_time' );&#13;&#10;&#9;gr.query();&#13;&#10;&#9;if ( gr.next() )&#13;&#10;&#9;&#9;output = gr.feet + ( gr.inches / 12 );&#13;&#10;&#9;&#13;&#10;&#9;return output;&#13;&#10;&#13;&#10;})(current);" label="Feet" max_length="40" name="feet" read_only="true" type="decimal" virtual="true"/>
        <element label="First name" max_length="100" name="first_name" type="string"/>
        <element choice="1" label="Gender" mandatory="true" max_length="40" name="gender" type="choice">
            <choice>
                <element label="Male" sequence="0" value="Male"/>
                <element label="Female" sequence="1" value="Female"/>
            </choice>
        </element>
        <element calculation="(function calculatedFieldValue(current) {&#13;&#10;&#13;&#10;&#9;var output = '';&#13;&#10;&#9;&#13;&#10;&#9;var gr = new GlideRecord( 'x_16717_homechart_height' );&#13;&#10;&#9;gr.addQuery( 'patient', current.sys_id );&#13;&#10;&#9;gr.orderByDesc( 'date_time' );&#13;&#10;&#9;gr.query();&#13;&#10;&#9;if ( gr.next() )&#13;&#10;&#9;&#9;output = gr.feet + ' ft' + ( gr.inches.nil() || gr.inches == 0 ? '' : ' ' + gr.inches + ' in' );&#13;&#10;&#9;&#13;&#10;&#9;return output;&#13;&#10;&#13;&#10;})(current);" label="Height" max_length="100" name="height" read_only="true" type="string" virtual="true"/>
        <element calculation="(function calculatedFieldValue(current) {&#13;&#10;&#13;&#10;&#9;var output = 0;&#13;&#10;&#9;&#13;&#10;&#9;var gr = new GlideRecord( 'x_16717_homechart_weight' );&#13;&#10;&#9;gr.addQuery( 'patient', current.sys_id );&#13;&#10;&#9;gr.orderByDesc( 'date_time' );&#13;&#10;&#9;gr.query();&#13;&#10;&#9;if ( gr.next() )&#13;&#10;&#9;&#9;output = gr.kilograms;&#13;&#10;&#9;&#13;&#10;&#9;return output;&#13;&#10;&#13;&#10;})(current);" label="Kilograms" max_length="40" name="kilograms" read_only="true" type="decimal" virtual="true"/>
        <element label="Last name" max_length="100" name="last_name" type="string"/>
        <element calculation="(function calculatedFieldValue(current) {&#13;&#10;&#13;&#10;&#9;return current.first_name + ' ' + current.last_name;&#13;&#10;&#13;&#10;})(current);" display="true" label="Name" max_length="200" name="name" read_only="true" type="string" virtual="true"/>
        <element default="javascript:global.getNextObjNumberPadded();" label="Number" max_length="40" name="number" read_only="true" type="string"/>
        <element label="Picture" max_length="40" name="picture" type="user_image"/>
        <element calculation="(function calculatedFieldValue(current) {&#13;&#10;&#13;&#10;&#9;var output = 0;&#13;&#10;&#9;&#13;&#10;&#9;var gr = new GlideRecord( 'x_16717_homechart_weight' );&#13;&#10;&#9;gr.addQuery( 'patient', current.sys_id );&#13;&#10;&#9;gr.orderByDesc( 'date_time' );&#13;&#10;&#9;gr.query();&#13;&#10;&#9;if ( gr.next() )&#13;&#10;&#9;&#9;output = gr.pounds_dec;&#13;&#10;&#9;&#13;&#10;&#9;return output;&#13;&#10;&#13;&#10;})(current);" label="Pounds" max_length="40" name="pounds" read_only="true" type="decimal" virtual="true"/>
        <element label="Preferred name" max_length="40" name="preferred_name" type="string"/>
        <element label="System user record" max_length="32" name="system_user_record" reference="sys_user" type="reference"/>
        <element calculation="(function calculatedFieldValue(current) {&#13;&#10;&#13;&#10;&#9;var output = '';&#13;&#10;&#9;&#13;&#10;&#9;var gr = new GlideRecord( 'x_16717_homechart_weight' );&#13;&#10;&#9;gr.addQuery( 'patient', current.sys_id );&#13;&#10;&#9;gr.orderByDesc( 'date_time' );&#13;&#10;&#9;gr.query();&#13;&#10;&#9;if ( gr.next() )&#13;&#10;&#9;&#9;output = gr.pounds + ' lb' + ( gr.ounces.nil() || gr.ounces == 0 ? '' : ' ' + gr.ounces + ' oz' );&#13;&#10;&#9;&#13;&#10;&#9;return output;&#13;&#10;&#13;&#10;})(current);" label="Weight" max_length="100" name="weight" read_only="true" type="string" virtual="true"/>
        <index name="index">
            <element name="system_user_record"/>
        </index>
    </element>
</database>
